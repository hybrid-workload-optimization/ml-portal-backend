apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      volumes:
      - name: grafana-config-volume
        configMap:
          name: grafana-config
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasource.yml
            path: provisioning/datasources/datasource.yml
          - key: dashboards.yml
            path: provisioning/dashboards/dashboards.yml
          - key: dashboard.json
            path: dashboard/dashboard.json
          - key: gpu-dashboard.json
            path: dashboard/gpu-dashboard.json
          - key: k8s-cluster.json
            path: dashboard/k8s-cluster.json
          - key: k8s-node.json
            path: dashboard/k8s-node.json
          - key: java-app.json
            path: dashboard/java-app.json
          - key: mysql.json
            path: dashboard/mysql.json
      containers:
      - name: grafana
        image: grafana/grafana:7.5.17
        ports:
        - name: grafana
          containerPort: 3000
        volumeMounts:
          - name: grafana-config-volume
            mountPath: /etc/grafana/
        env:
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-account
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-account
              key: admin-password
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '3000'
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
